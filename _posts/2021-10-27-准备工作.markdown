### 准备工作的重要性  
笑来老师在多个场所说过他在得到做《通往财富自由》的时候遇到的一个意外情况，眼睛出问题了，而接下来节目还安排了一个线下见面会，这让策划人着急坏了，而笑来老师很淡定，他跟人说，不用担心，我是有存货的，带我到现场就行了，大致意思是这样。结果笑来老师蒙着眼睛把讲座给做完了。笑来老师说他会在一个月的第一个星期把这个月要做的事情给做完，遇到意外情况也不用担心，一直都是有备选方案的。  
今天是李文斌在早会分享，他说很突然接到通知，没有准备，结果讲起来也真是像他说的，一点逻辑没有，很尴尬的讲完了，也不算讲完就那么草草的结束了。在那短短的几分钟就只听出来老李在那道歉了，今天没准备，下次一定准备一定讲好点。老李也是在他的领域干了十几年的人了，按说不应该这么个样子，唯一的理由是他从来没有总结过自己的工作。  

笑来老师在自学是门手艺里说，学习就是整理、归纳、总结、再整理的过程。现在一想还真是那么回事，只有总结了才是你自己的，总结的多了，随便拿出来点东西应付一次分享也是绰绰有余，所以说，学习就是总结的过程。  

我在学习python的时候一直没搞明白class 定义的时候self究竟是什么意思，听老师说就是以后的实例对象，可是还是不明白，上网查了很多，看到别人说的都基本和老师说的差不多是一个意思，但是始终没有消除我心中的疑惑，一度感觉自己理解不了这个问题了。最后的结果是自己把他记在脑子里，在类定义里面的函数里面第一个参数一定是self,而在调用方法的时候不需要传进去这个参数，解释器会自动传进去这个参数。这样的结果是自己也可以写代码，也可以定义类，使用类方法，以前也都可以正常使用，可是总觉得哪里有些问题没有解决。心里不是那么的亮堂。直到我看了python 的tutorial文档，我才慢慢的对这个问题有了进一步的了解。 
class 类定义，定义一个类，产生了一个基本的wrapper，类可以进行两个操作，一个是reference attributes, 类定义中了变量和函数都是类的attributes；另一个操作是instanction, 实例化instance object. instance object 可以进行data referenec and method.可以给实例对象增加属性值data，当实例对象的attribute is non-data的时候，这个对象会调用对象的类的函数，实例对象和类的函数被抽象为一个method object.当method 被一组参数调用的时候，会找到实例的类对应的函数，（实例对象+method参数）作为参数调用这个函数。这就解释了定义的时候为什么会有一个self参数了，因为我们知道函数定义的时候如果定义了一个参数（即使这个参数没有什么作用），那在调用函数的时候就必须传进去这个参数，否则就会报错。对应的，如果我们调用一个函数，传递给它的参数也一定是被定义了，否则也是会报错的，所以，method object 在调用类的函数时，会传递一个instance object 作为第一个参数，所以在定义的时候就需要先定义这么一个参数。这个参数没有实际的作用，为了代码的可读性，我们都约定为self,你也可以试着用其他的名称也是一样的起作用。这就是我对self的理解，进一步的理解，消除的自己困惑。